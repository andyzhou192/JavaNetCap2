<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>JavaNetCap</groupId>
	<artifactId>JavaNetCap</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>JavaNetCap</name>
	<url>http://maven.apache.org</url>

	<properties>
		<deploy.dir>${project.basedir}/bin</deploy.dir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<!-- java swing -->
		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>jgoodies-common</artifactId>
			<version>1.8.0</version>
		</dependency>
		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>jgoodies-forms</artifactId>
			<version>1.8.0</version>
		</dependency>
		<!-- json-lib components begin -->
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<classifier>jdk15</classifier><!--指定jdk版本 -->
		</dependency>
		<dependency>
			<groupId>net.sf.ezmorph</groupId>
			<artifactId>ezmorph</artifactId>
			<version>1.0.6</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.3</version>
		</dependency>
		<!-- json-lib components end -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker-gae</artifactId>
			<version>2.3.23</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>
		<!-- log4j -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.1</version>
		</dependency>
		<!-- operate excel -->
		<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.12</version>
		</dependency>
		<!-- format html -->
		<dependency>
			<groupId>org.dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>2.0.0</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>JavaNetCap</finalName>
		<sourceDirectory>src</sourceDirectory>
		<resources>
			<!-- Control resource file copy -->
			<resource>
				<directory>${project.basedir}</directory>
				<targetPath>${project.build.directory}</targetPath>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<!-- Set jdk version and source code -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			 <!-- config manifest file when package jar file,add dependency jars from lib package -->
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <!-- MainClass in mainfest make a executable jar -->
                    <archive>
                    	 <!-- do not contain pom.xml and pom.properties files in jar that generated -->
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifest>
                        	<!-- Whether to put the third party jar into the manifest classpath -->
                        	<addClasspath>true</addClasspath>
                        	<!-- the classpath prefix in Manifest generated, because the third party jar into the Lib directory, so the classpath prefix is lib/ -->
                            <classpathPrefix>lib/</classpathPrefix>
                            <!-- application's main class -->
                            <mainClass>com.view.MainFrame</mainClass>
                        </manifest>
                        <!-- 给清单文件添加键值对(配置文件外置) -->  
                        <manifestEntries>  
                            <Class-Path>exts/*.jar</Class-Path>  
                        </manifestEntries>
                    </archive>
                    <!-- Filter out files that don't want to be included in jar -->
                    <!--<excludes>-->
                        <!--<exclude>${project.basedir}/xml/*</exclude>-->
                    <!--</excludes>-->
                </configuration>
            </plugin>
            
            <!-- The configuration of maven-assembly-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <!-- The configuration of the plugin -->
                <configuration>
                    <!-- Specifies the configuration file of the assembly plugin -->
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- copy dependency jars to lib dir -->
            <!-- 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration> -->
                            <!-- ${project.build.directory}是maven变量，内置的，表示target目录,如果不写，将在跟目录下创建/lib -->
                      <!--  <outputDirectory>${project.build.directory}/lib</outputDirectory> -->
                            <!-- excludeTransitive:是否不包含间接依赖包，比如我们依赖A，但是A又依赖了B，我们是否也要把B打进去 默认不打-->
                      <!--  <excludeTransitive>true</excludeTransitive> -->
                            <!-- 复制的jar文件去掉版本信息 -->
                      <!--  <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
             -->
            <!-- Solve the problem of resource file encoding -->
            <!-- 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
             -->
            <!-- package source file to jar file -->
            <!-- 
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <attach>true</attach>
                    <encoding>UTF-8</encoding>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
             -->
		</plugins>
	</build>
</project>